diff --git a/src/wallet/wallet_rpc_server_commands_defs.h b/src/wallet/wallet_rpc_server_commands_defs.h
index 507ff4f6c..59786cff2 100644
--- a/src/wallet/wallet_rpc_server_commands_defs.h
+++ b/src/wallet/wallet_rpc_server_commands_defs.h
@@ -493,6 +493,7 @@ namespace wallet_rpc
       std::string tx_hash;
       std::string tx_key;
       uint64_t amount;
+      uint64_t amount_usd;
       uint64_t fee;
       uint64_t weight;
       std::string tx_blob;
@@ -504,6 +505,7 @@ namespace wallet_rpc
         KV_SERIALIZE(tx_hash)
         KV_SERIALIZE(tx_key)
         KV_SERIALIZE(amount)
+        KV_SERIALIZE(amount_usd)
         KV_SERIALIZE(fee)
         KV_SERIALIZE(weight)
         KV_SERIALIZE(tx_blob)
@@ -561,6 +563,7 @@ namespace wallet_rpc
       std::list<std::string> tx_hash_list;
       std::list<std::string> tx_key_list;
       std::list<uint64_t> amount_list;
+      std::list<uint64_t> amount_usd_list;
       std::list<uint64_t> fee_list;
       std::list<uint64_t> weight_list;
       std::list<std::string> tx_blob_list;
@@ -572,6 +575,7 @@ namespace wallet_rpc
         KV_SERIALIZE(tx_hash_list)
         KV_SERIALIZE(tx_key_list)
         KV_SERIALIZE(amount_list)
+        KV_SERIALIZE(amount_usd_list)
         KV_SERIALIZE(fee_list)
         KV_SERIALIZE(weight_list)
         KV_SERIALIZE(tx_blob_list)
@@ -736,6 +740,7 @@ namespace wallet_rpc
       std::list<std::string> tx_hash_list;
       std::list<std::string> tx_key_list;
       std::list<uint64_t> amount_list;
+      std::list<uint64_t> amount_usd_list;
       std::list<uint64_t> fee_list;
       std::list<uint64_t> weight_list;
       std::list<std::string> tx_blob_list;
@@ -747,6 +752,7 @@ namespace wallet_rpc
         KV_SERIALIZE(tx_hash_list)
         KV_SERIALIZE(tx_key_list)
         KV_SERIALIZE(amount_list)
+        KV_SERIALIZE(amount_usd_list)
         KV_SERIALIZE(fee_list)
         KV_SERIALIZE(weight_list)
         KV_SERIALIZE(tx_blob_list)
@@ -810,6 +816,7 @@ namespace wallet_rpc
       std::list<std::string> tx_hash_list;
       std::list<std::string> tx_key_list;
       std::list<uint64_t> amount_list;
+      std::list<uint64_t> amount_usd_list;
       std::list<uint64_t> fee_list;
       std::list<uint64_t> weight_list;
       std::list<std::string> tx_blob_list;
@@ -821,6 +828,7 @@ namespace wallet_rpc
         KV_SERIALIZE(tx_hash_list)
         KV_SERIALIZE(tx_key_list)
         KV_SERIALIZE(amount_list)
+        KV_SERIALIZE(amount_usd_list)
         KV_SERIALIZE(fee_list)
         KV_SERIALIZE(weight_list)
         KV_SERIALIZE(tx_blob_list)
@@ -869,6 +877,7 @@ namespace wallet_rpc
       std::string tx_hash;
       std::string tx_key;
       uint64_t amount;
+      uint64_t amount_usd;
       uint64_t fee;
       uint64_t weight;
       std::string tx_blob;
@@ -880,6 +889,7 @@ namespace wallet_rpc
         KV_SERIALIZE(tx_hash)
         KV_SERIALIZE(tx_key)
         KV_SERIALIZE(amount)
+        KV_SERIALIZE(amount_usd)
         KV_SERIALIZE(fee)
         KV_SERIALIZE(weight)
         KV_SERIALIZE(tx_blob)
@@ -941,6 +951,7 @@ namespace wallet_rpc
     bool locked;
     cryptonote::subaddress_index subaddr_index;
     std::string address;
+    std::string type;
 
     BEGIN_KV_SERIALIZE_MAP()
       KV_SERIALIZE(payment_id)
@@ -951,6 +962,7 @@ namespace wallet_rpc
       KV_SERIALIZE(locked)
       KV_SERIALIZE(subaddr_index)
       KV_SERIALIZE(address)
+      KV_SERIALIZE(type)
     END_KV_SERIALIZE_MAP()
   };
 
@@ -959,9 +971,11 @@ namespace wallet_rpc
     struct request_t
     {
       std::string payment_id;
+      std::vector<std::string> types;
 
       BEGIN_KV_SERIALIZE_MAP()
         KV_SERIALIZE(payment_id)
+	KV_SERIALIZE(types)
       END_KV_SERIALIZE_MAP()
     };
     typedef epee::misc_utils::struct_init<request_t> request;
@@ -983,10 +997,12 @@ namespace wallet_rpc
     {
       std::vector<std::string> payment_ids;
       uint64_t min_block_height;
+      std::vector<std::string> types;
 
       BEGIN_KV_SERIALIZE_MAP()
         KV_SERIALIZE(payment_ids)
         KV_SERIALIZE(min_block_height)
+	KV_SERIALIZE(types)
       END_KV_SERIALIZE_MAP()
     };
     typedef epee::misc_utils::struct_init<request_t> request;
@@ -1302,11 +1318,13 @@ namespace wallet_rpc
     struct response_t
     {
       uint64_t received;
+      uint64_t received_usd;
       bool in_pool;
       uint64_t confirmations;
 
       BEGIN_KV_SERIALIZE_MAP()
         KV_SERIALIZE(received)
+        KV_SERIALIZE(received_usd)
         KV_SERIALIZE(in_pool)
         KV_SERIALIZE(confirmations)
       END_KV_SERIALIZE_MAP()
@@ -1363,12 +1381,14 @@ namespace wallet_rpc
     {
       bool good;
       uint64_t received;
+      uint64_t received_usd;
       bool in_pool;
       uint64_t confirmations;
 
       BEGIN_KV_SERIALIZE_MAP()
         KV_SERIALIZE(good)
         KV_SERIALIZE(received)
+        KV_SERIALIZE(received_usd)
         KV_SERIALIZE(in_pool)
         KV_SERIALIZE(confirmations)
       END_KV_SERIALIZE_MAP()
@@ -2061,6 +2081,47 @@ namespace wallet_rpc
     typedef epee::misc_utils::struct_init<response_t> response;
   };
 
+  struct COMMAND_RPC_GET_PRICING_RECORD
+  {
+    struct request_t
+    {
+      BEGIN_KV_SERIALIZE_MAP()
+      END_KV_SERIALIZE_MAP()
+    };
+    typedef epee::misc_utils::struct_init<request_t> request;
+    
+    struct response_t
+    {
+      offshore::pricing_record pr;
+      
+      BEGIN_KV_SERIALIZE_MAP()
+        KV_SERIALIZE(pr)
+      END_KV_SERIALIZE_MAP()
+    };
+    typedef epee::misc_utils::struct_init<response_t> response;
+  };
+
+  struct COMMAND_RPC_GET_PUBLIC_KEY
+  {
+    struct request_t
+    {
+      BEGIN_KV_SERIALIZE_MAP()
+      END_KV_SERIALIZE_MAP()
+    };
+    typedef epee::misc_utils::struct_init<request_t> request;
+    
+
+    struct response_t
+    {
+      std::string str_ec_public_key;
+      
+      BEGIN_KV_SERIALIZE_MAP()
+      KV_SERIALIZE(str_ec_public_key)
+      END_KV_SERIALIZE_MAP()
+    };
+    typedef epee::misc_utils::struct_init<response_t> response;
+  };
+
   struct COMMAND_RPC_GET_LANGUAGES
   {
     struct request_t
@@ -2183,6 +2244,7 @@ namespace wallet_rpc
       std::string spendkey;
       std::string viewkey;
       std::string password;
+      std::string language;
       bool autosave_current;
 
       BEGIN_KV_SERIALIZE_MAP()
@@ -2192,6 +2254,7 @@ namespace wallet_rpc
       KV_SERIALIZE(spendkey)
       KV_SERIALIZE(viewkey)
       KV_SERIALIZE(password)
+      KV_SERIALIZE(language)
       KV_SERIALIZE_OPT(autosave_current, true)
       END_KV_SERIALIZE_MAP()
     };
